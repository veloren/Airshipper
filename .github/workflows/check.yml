# This workflow will ensure that all MRs do compile, emit no warnings and are formatted correctly.

name: Check

on:
  # https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/
  workflow_dispatch:
  push:
    branches-ignore:
      - "master"
      - "staging"
    tags-ignore:
      - v*
  pull_request_target:
    types: [opened, reopened]

jobs:
  test:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    name: Test
    steps:
      # Checkout
      - name: Checkout sources
        uses: actions/checkout@v2

      # Cache
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}

      # Toolchain Version
      - name: Aquire Toolchain Version
        id: vars
        shell: pwsh
        run: echo "::set-output name=rust_toolchain::$(cat rust-toolchain)"

      # Toolchain
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ steps.vars.outputs.rust_toolchain }}
          override: true

      # Test
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout sources
        uses: actions/checkout@v2

      # Cache
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-lints-${{ hashFiles('**/Cargo.lock') }}

      # Toolchain Version
      - name: Aquire Toolchain Version
        id: vars
        shell: pwsh
        run: echo "::set-output name=rust_toolchain::$(cat rust-toolchain)"

      # Toolchain
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ steps.vars.outputs.rust_toolchain }}
          override: true
          components: rustfmt, clippy

      # Fomatting
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      # Linting
      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings
