name: Artifacts

on:
  push:
    branches:
      #- master
      - release
      - staging
jobs:
  artifacts:
    name: Artifact
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Aquire Version
        id: vars
        shell: bash
        run: |
          cd client 
          echo "::set-output name=version::$(cargo pkgid | cut -d# -f2 | cut -d: -f2)"
      - name: Print version
        run: echo "Airshipper v${{ steps.vars.outputs.version }}"
      # Cache
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo target dir
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      # Build & Package airshipper

      # Windows
      - name: Enable static CRT linkage
        if: matrix.os == 'windows-latest'
        run: |
          mkdir .cargo
          echo '[target.x86_64-pc-windows-msvc]' >> .cargo/config
          echo 'rustflags = ["-Ctarget-feature=+crt-static"]' >> .cargo/config
      - name: Cache cargo-wix
        if: matrix.os == 'windows-latest'
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin/cargo-wix
          key: ${{ runner.os }}-cargo-wix-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cargo-wix
        if: matrix.os == 'windows-latest'
        run: cargo install cargo-wix #--vers 0.3.0
      - name: MSI Installer
        if: matrix.os == 'windows-latest'
        run: cargo wix --nocapture -n client --install-version ${{ steps.vars.outputs.version }}
      - name: proper naming
        if: matrix.os == 'windows-latest'
        run: |
          Remove-Item â€“path target/wix/airshipper-${{ steps.vars.outputs.version }}-x86_64.msi -ErrorAction Ignore
          ren target/wix/client-${{ steps.vars.outputs.version }}-x86_64.msi airshipper-${{ steps.vars.outputs.version }}-x86_64.msi

      # Linux & MacOS
      - name: Build
        if: matrix.os != 'windows-latest'
        run: cargo build --bin airshipper --release
      - name: Package
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p artifact/
          mkdir -p artifact/assets/
          cp -r client/assets/** artifact/assets/
          cp target/release/airshipper artifact/airshipper-${{ matrix.os }}-${{ steps.vars.outputs.version }}
      # Upload Artifacts

      # Windows
      - name: Upload artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v1
        with:
          name: airshipper-windows-installer
          path: target/wix/airshipper-${{ steps.vars.outputs.version }}-x86_64.msi

      # Linux & MacOS
      - name: Upload artifact
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v1
        with:
          name: airshipper-${{ matrix.os }}
          path: artifact/airshipper-${{ matrix.os }}-${{ steps.vars.outputs.version }}
