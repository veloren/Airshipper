# Credit goes to https://github.com/rust-analyzer/rust-analyzer
name: CI
on:
  push:
    branches_ignore:
      - master

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUN_SLOW_TESTS: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

jobs:
  rust-fmt:
    name: Audit Rust formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Format Check
        continue-on-error: true
        run: cargo fmt --all -- --check
  rust-test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - if: matrix.os == 'ubuntu-latest'
        run: sudo chown -R $(whoami):$(id -ng) ~/.cargo/
      # Cache
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo target dir
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      # Compile
      - name: Compile
        run: cargo test --no-run --features client
      - name: Compile
        run: cargo test --no-run --no-default-features --features server
      # Test
      - name: Test
        run: cargo test --features client
      - name: Test
        run: cargo test --no-default-features --features server
