# Publishes airshipper server to the gitlab container registry
# https://gitlab.com/veloren/airshipper/container_registry
# Currently this will trigger an update of production since it
# is configured to monitor this registry for changes.
docker:
  stage: deploy
  environment: production
  # Deploy the server on every merge to master, but don't re-deploy when a tag is pushed to master
  rules:
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null)
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  tags: ["veloren/*", "publish", "trusted"]
  dependencies:
    - linux-x86_64
  before_script:
    - ls "$CI_PROJECT_DIR/server/"
  script:
    # Help kaniko identify that it is running in a container.
    # avoids this issue: https://github.com/GoogleContainerTools/kaniko/issues/1542
    - export container=docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/server/Dockerfile --destination "${CI_REGISTRY_IMAGE}/server:${CI_COMMIT_REF_NAME}"

gitlab_release:
  extends: .treleasetag
  stage: publish
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  tags: ["veloren/*", "publish", "trusted"]
  before_script:
    - echo "" # Override before_script in .gitlab-ci.yml
  dependencies:
    - linux-x86_64
    - macos-x86_64
    - macos-aarch64
    - windows-x86_64
    - windows-installer-x86_64
  script:
    # These are exported by earlier jobs via reports/dotenv
    - echo "LINUX_X86_64_JOB_ID=$LINUX_X86_64_JOB_ID"
    - echo "MACOS_X86_64_JOB_ID=$MACOS_X86_64_JOB_ID"
    - echo "MACOS_AARCH64_JOB_ID=$MACOS_AARCH64_JOB_ID"
    - echo "WINDOWS_JOB_ID=$WINDOWS_JOB_ID"
    - echo "WINDOWS_INSTALLER_JOB_ID=$WINDOWS_INSTALLER_JOB_ID"
  release:
    name: "Airshipper $CI_COMMIT_TAG"
    description: "Airshipper release $CI_COMMIT_TAG"
    tag_name: "$CI_COMMIT_TAG"
    assets:
      links:
        - name: "Linux (x86_64) Client"
          filepath: "/binaries/linux-client-x86_64"
          link_type: "other"
          url: "https://gitlab.com/veloren/airshipper/-/jobs/${LINUX_X86_64_JOB_ID}/artifacts/raw/airshipper"
        - name: "Linux (x86_64) Client (zip)"
          filepath: "/binaries/linux-client-x86_64.zip"
          link_type: "other"
          url: "https://gitlab.com/veloren/airshipper/-/jobs/${LINUX_X86_64_JOB_ID}/artifacts/raw/airshipper-linux.zip"
        - name: "Linux (x86_64) Server"
          filepath: "/binaries/linux-server-x86_64"
          link_type: "other"
          url: "https://gitlab.com/veloren/airshipper/-/jobs/${LINUX_X86_64_JOB_ID}/artifacts/raw/airshipper-server"
        - name: "MacOS (x86_64) Client"
          filepath: "/binaries/macos-client-x86_64"
          link_type: "other"
          url: "https://gitlab.com/veloren/airshipper/-/jobs/${MACOS_X86_64_JOB_ID}/artifacts/raw/airshipper"
        - name: "MacOS (x86_64) Client (zip)"
          filepath: "/binaries/macos-client-x86_64.zip"
          link_type: "other"
          url: "https://gitlab.com/veloren/airshipper/-/jobs/${MACOS_X86_64_JOB_ID}/artifacts/raw/airshipper-macos.zip"
        - name: "MacOS (aarch64) Client"
          filepath: "/binaries/macos-client-aarch64"
          link_type: "other"
          url: "https://gitlab.com/veloren/airshipper/-/jobs/${MACOS_AARCH64_JOB_ID}/artifacts/raw/airshipper"
        - name: "MacOS (aarch64) Client (zip)"
          filepath: "/binaries/macos-client-aarch64.zip"
          link_type: "other"
          url: "https://gitlab.com/veloren/airshipper/-/jobs/${MACOS_AARCH64_JOB_ID}/artifacts/raw/airshipper-macos.zip"
        - name: "Windows (x86_64) Client"
          filepath: "/binaries/windows-client-x86_64"
          link_type: "other"
          url: "https://gitlab.com/veloren/airshipper/-/jobs/${WINDOWS_JOB_ID}/artifacts/raw/airshipper.exe"
        - name: "Windows (x86_64) Installer"
          filepath: "/binaries/windows-installer-x86_64"
          link_type: "package"
          url: "https://gitlab.com/veloren/airshipper/-/jobs/${WINDOWS_INSTALLER_JOB_ID}/artifacts/raw/airshipper-installer.exe"

# Generates flatpak files and pushes them to https://github.com/flathub/net.veloren.airshipper
flatpak:
  stage: publish
  environment: production
  # Deploy the server on every merge to master and a tag is pushed to master
  rules:
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG != null)
  image:
    name: debian:bookworm-slim
    entrypoint: [""]
  tags: ["veloren/*", "publish", "trusted"]
  before_script:
    - echo "" # Override before_script in .gitlab-ci.yml
  script:
    - apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get install -y flatpak-builder python3 python3-yaml python3-toml python3-aiohttp jq yq curl git
    - flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
    - rm -r net.veloren.airshipper || echo ""
    - rm -r flatpak-builder-tools || echo ""
    - git clone "https://${VELOREN_BOT_ACCESS_TOKEN}@github.com/flathub/net.veloren.airshipper.git"
    - git clone https://github.com/flatpak/flatpak-builder-tools.git
    - export RUST_TOOLCHAIN=$(cat rust-toolchain | tail -c 11)
    - cd net.veloren.airshipper
    - export RUST_AARCH64="https://static.rust-lang.org/dist/${RUST_TOOLCHAIN}/rust-nightly-aarch64-unknown-linux-gnu.tar.xz"
    - export RUST_X64="https://static.rust-lang.org/dist/${RUST_TOOLCHAIN}/rust-nightly-x86_64-unknown-linux-gnu.tar.xz"
    - export RUST_AARCH64_SHA256=$(curl -sL ${RUST_AARCH64} | sha256sum)
    - export RUST_X64_SHA256=$(curl -sL ${RUST_X64} | sha256sum)
    - export AIRSHIPPER_SOURCE="https://gitlab.com/veloren/airshipper/-/archive/${CI_COMMIT_TAG}/airshipper-${CI_COMMIT_TAG}.tar.gz"
    - export AIRSHIPPER_SOURCE_SHA256=$(curl -sL ${AIRSHIPPER_SOURCE} | sha256sum)
    - yq -i -Y ".modules[0].sources[0].url = \"${RUST_AARCH64}\"" net.veloren.airshipper.yaml
    - yq -i -Y ".modules[0].sources[0].sha256 = \"${RUST_AARCH64_SHA256}\"" net.veloren.airshipper.yaml
    - yq -i -Y ".modules[0].sources[1].url = \"${RUST_X64}\"" net.veloren.airshipper.yaml
    - yq -i -Y ".modules[0].sources[1].sha256 = \"${RUST_X64_SHA256}\"" net.veloren.airshipper.yaml
    - yq -i -Y ".modules[1].sources[0].url = \"${AIRSHIPPER_SOURCE}\"" net.veloren.airshipper.yaml
    - yq -i -Y ".modules[1].sources[0].sha256 = \"${AIRSHIPPER_SOURCE_SHA256}\"" net.veloren.airshipper.yaml
    - ../flatpak-builder-tools/cargo/flatpak-cargo-generator.py --output generated-sources.json ../Cargo.lock
    - git status
    - git diff net.veloren.airshipper.yaml | cat
    - git config user.email "veloren-bot@veloren.net"
    - git config user.name "veloren-bot"
    - git add net.veloren.airshipper.yaml generated-sources.json
    - git branch -D "veloren-bot/update_version" || echo ""
    - git checkout -b "veloren-bot/update_version"
    - git commit -m "updating new airshipper version"
    - git push --set-upstream origin "veloren-bot/update_version"

cratesio:
  stage: publish
  environment: production
  # Deploy the server on every merge to master and a tag is pushed to master
  rules:
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG != null)
  image:
    name: registry.gitlab.com/veloren/veloren-docker-ci/base/linux-x86_64:${CACHE_IMAGE_TAG}
  tags: ["veloren/*", "publish", "trusted"]
  before_script:
    - echo "" # Override before_script in .gitlab-ci.yml
  script:
    - CARGO_REGISTRY_TOKEN=${VELOREN_BOT_CRATES_IO_ACCESS_TOKEN} cargo publish --package airshipper --dry-run
